<head>
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<div class="head">
  
</div>
<div class="container d-flex">
    <div class="allCourse d-flex flex-column justify-content-between align-items-center">
        <div><button id="explore" class="explore d-flex">+探索新課程</button></div>
        <div class="currentCourse" id="currentCourse">
            <div hidden><span class="dot"></span>  寶可夢體驗</div>
                </div>
        <div class="currentCourse" id="orderDetail">
            
        </div>
        <div class="list">
        </div>
    </div>
    <div class="calendar">
        <div class="month">
            <i class="fas fa-angle-left prev"></i>
            <div class="date">
                <h1></h1>
                <p>Fri May 29,2020</p>
            </div>
            
            <i class="fas fa-angle-right next"></i>
        </div>
        <div class="weekdays">
            <div>Sun</div>
            <div>Mon</div>
            <div>Tue</div>
            <div>Wed</div>
            <div>Thu</div>
            <div>Fri</div>
            <div>Sat</div>
        </div>
        <div class="days">
            <div class="prev-date flip " style="color: white,;background-color: #E8E8D0">
                <i>1</i><br/>
                <span>寶可夢體驗營</span>
            </div>
        </div>
    </div>
@*     <div class="schedule panelSch">
        <div class="title">
            <div class="pickday">
                <h1></h1>
            </div>
        </div>
        <div class="list" id="list">
        </div>
    </div> *@
</div>

@*詳細課程資訊*@
<!-- Modal -->
<div class="modal top fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" data-mdb-backdrop="false" aria-hidden="true" data-mdb-keyboard="true">
    <div class="modal-dialog  ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title">Modal title</h5>
                <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id = "detailBody"class="modal-body">
          
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">
                    進入課程明細
                </button>
                <button type="button" class="btn btn-primary">評論</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
<script>
    /* 課表 */


    const date = new Date();
    let getDate;


    async function renderCalendar() {
        const value = await schedule();
        const getData = value;
        console.log(getData);

        date.setDate(1);

        const monthDays = document.querySelector(".days");


        const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()

        const prevLastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate()



        const firstDayIndex = date.getDay();

        const lastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay()

        // console.log(lastDayIndex)
        const nextDays = 7 - lastDayIndex - 1;



        const months = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
        ];
        document.querySelector(".date h1").innerHTML = months[date.getMonth()];

        document.querySelector('.date p').innerHTML = new Date().toDateString();

        let days = "";



        for (let x = firstDayIndex; x > 0; x--) {
            let pick = date.getFullYear() + '-' + (date.getMonth().toString().padStart(2, '0')) + '-' + (prevLastDay - x + 1);
            // days += `<div class="prev-date flip" data-id="${pick} id="${pick}">${prevLastDay - x + 1}</div>`
            let pickNew = new Date(pick);
            let t = 0;
            for (let i = 0; i < getData.length; i++) {
                let beginTime = new Date(getData[i].beginTime);
                let endTime = new Date(getData[i].endTime);
                console.log(pickNew)
                if (beginTime.getFullYear() == pickNew.getFullYear() && beginTime.getMonth() == pickNew.getMonth() && beginTime.getDate() == pickNew.getDate()) {
                    console.log(beginTime.getFullYear())
                    t = 1;
                    break
                }
                else {
                    t = 0;
                }
            }

            if (t == 1) {
                days += `<div class="prev-date flip" data-id="${pick}" id="${pick}" style="color: white,
                                                               ;background-color: #E8E8D0">${prevLastDay - x + 1}</div>`
            }
            else {
                days += `<div class="prev-date flip" data-id="${pick}" id="${pick}">${prevLastDay - x + 1}</div>`
            }
        }

        let t = 0;
        for (let i = 1; i <= lastDay; i++) {
            if (i === new Date().getDate() && date.getMonth() === new Date().getMonth()) {
                let pick = date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0') + '-' + i;
                let pickNew = new Date(pick);
                let t = 0;
                for (let i = 0; i < getData.length; i++) {
                    let beginTime = new Date(getData[i].beginTime);
                    let endTime = new Date(getData[i].endTime);
                    console.log(pickNew)
                    if (beginTime.getFullYear() == pickNew.getFullYear() && beginTime.getMonth() == pickNew.getMonth() && beginTime.getDate() == pickNew.getDate()) {
                        console.log(beginTime.getFullYear())
                        t = 1;
                        break
                    }
                    else {
                        t = 0;
                    }
                }

                if (t == 1) {
                    days += `<div class="today flip" data-id="${pick}" id="${pick}"  style="color: white,
                                                   ;background-color: #E8E8D0">${i}</div>`;
                }
                else {
                    days += `<div class="today flip" data-id="${pick}" id="${pick}">${i}</div>`;
                }

            }
            else {
                let pick = date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0') + '-' + i;

                let pickNew = new Date(pick);
                let t = 0;
                let items="";
                for (let i = 0; i < getData.length; i++) {
                    let beginTime = new Date(getData[i].beginTime);
                    let endTime = new Date(getData[i].endTime);
                    console.log(pickNew)
                    if (beginTime.getFullYear() == pickNew.getFullYear() && beginTime.getMonth() == pickNew.getMonth() && beginTime.getDate() == pickNew.getDate()) {
                        console.log(beginTime.getFullYear())

                            items += `

                                                <br><span onclick="(showModal(${getData[i].orderId}))" data-bs-toggle="modal" ><span class="dot"></span>   ${getData[i].productName}`;
                        t = 1;
                        // break
                    }
                    else {
                        t = 0;
                    }
                }

                if (items!="") {
                        days +=`<div class="flip" data-id="${pick}" id="${pick}" style="background-color:#D0D0D0"><i>${i}</i>${items}</div>`;
                }
                else {
                        days += `<div class="flip" data-id="${pick}" id="${pick}">${i}</div>`;
                }
            }
        }

        for (let j = 1; j <= nextDays; j++) {
            let pick = date.getFullYear() + '-' + (date.getMonth() + 2).toString().padStart(2, '0') + '-' + j;
            let pickNew = new Date(pick);
            let t = 0;
            for (let i = 0; i < getData.length; i++) {
                let beginTime = new Date(getData[i].beginTime);
                let endTime = new Date(getData[i].endTime);
                console.log(pickNew)
                if (beginTime.getFullYear() == pickNew.getFullYear() && beginTime.getMonth() == pickNew.getMonth() && beginTime.getDate() == pickNew.getDate()) {
                    console.log(beginTime.getFullYear())
                    t = 1;
                    break
                }
                else {
                    t = 0;
                }
            }

            if (t == 1) {
                days += `<div class="next-date flip" data-id="${pick}" id="${pick}"  style="color: white,
                                                   ;background-color: #E8E8D0">${j}!!!</div>`
            }
            else {
                days += `<div class="next-date flip" data-id="${pick}" id="${pick}">${j}</div>`
            }

        }
        monthDays.innerHTML = days;
        await flip();
    }

    document.querySelector('.prev').addEventListener('click', () => {
        date.setMonth(date.getMonth() - 1);
        renderCalendar();

    });

    document.querySelector('.next').addEventListener('click', () => {
        date.setMonth(date.getMonth() + 1);
        console.log(this)
        renderCalendar();

    });

    renderCalendar();

    //load左邊全部課程

        $(document).ready(async function () {
            const value = await getcourses();
            const getCourse = value;
            const item = getCourse.map(data => {
                const beginTime = new Date(data.beginTime);
                const endTime = new Date(data.endTime);
                return `<div onclick="seeDetail(${data.orderId})"><span class="dot"></span><span>${(beginTime.getMonth() + 1).toString().padStart(2, '0')
                    } /${beginTime.getDate().toString().padStart(2, '0')}       ${beginTime.getHours().toString().padStart(2, '0')}:${beginTime.getMinutes().toString().padStart(2, '0')} -
                                                                                            ${endTime.getHours().toString().padStart(2, '0')}:${endTime.getMinutes().toString().padStart(2, '0')}</span> <br>
                                                                                                           ${data.productName}
                                                                    </div>
                                        `
            })
            $("#currentCourse").append(item)
        });
    //收合script
    let x = 0;
    let clicked = false;
    async function flip() {
        const value = await getcourses();
        const getCourse = value;
        console.log(getCourse)
        $('.flip').click(function () {
            if (!clicked) {
                console.log(this)
                $(".schedule").slideToggle("slow");
                x = $(this).data().id;
                const date = new Date(x);
                $(".schedule h1").html(x + ' schedule')
                $('#list').empty()
                let item = "";
                for (let i = 0; i < getCourse.length; i++) {
                    let beginTime = new Date(getCourse[i].beginTime);
                    let endTime = new Date(getCourse[i].endTime);
                    if (beginTime.getFullYear() == date.getFullYear() && beginTime.getMonth() == date.getMonth() && beginTime.getDate() == date.getDate()) {
                        item += `<li>${beginTime.getHours().toString().padStart(2, '0')}:${beginTime.getMinutes().toString().padStart(2, '0')} 至
                                                                            ${endTime.getHours().toString().padStart(2, '0')}:${endTime.getMinutes().toString().padStart(2, '0')} <br>
                                                                                                   ${getCourse[i].productName}
                                                    </li><br>
                                `
                    }

                }
                console.log(item)
                $('#list').append(`${item}`)
                clicked = true
            }

            else {
                if ($(this).data().id === x) {
                    $(".schedule").slideToggle("slow");

                    clicked = false;
                }
                else {
                    x = $(this).data().id
                    const date = new Date(x);
                    $('#list').empty()
                    $(".schedule h1").html(x + ' schedule')
                    let item = "";
                    for (let i = 0; i < getCourse.length; i++) {
                        let beginTime = new Date(getCourse[i].beginTime);
                        let endTime = new Date(getCourse[i].endTime);
                        if (beginTime.getFullYear() == date.getFullYear() && beginTime.getMonth() == date.getMonth() && beginTime.getDate() == date.getDate()) {
                                item += `<li>${beginTime.getHours().toString().padStart(2, '0')}:${beginTime.getMinutes().toString().padStart(2, '0')} 至
                                                                                        ${endTime.getHours().toString().padStart(2, '0')}:${endTime.getMinutes().toString().padStart(2, '0')} <br>
                                                                                                               ${getCourse[i].productName}
                                                                </li><br>
                                            `
                        }

                    }
                    console.log(item)
                    $('#list').append(`${item}`)
                    clicked = true;
                }
            }
        })
    };

    //暫時 todo....

    const t = new Date().toISOString(); // Get current date and time in the required format


    async function getcourses() {
        let response = await fetch(`@Url.Content("~/api/getCourses?id=8")`)
        console.log(response)

        let datas = await response.json();
        const filteredData = datas.filter(data =>
            data.productId !== null && data.orderStatus !== "取消");
        return filteredData;
    }

    async function schedule() {

        let response = await fetch(`@Url.Content("~/api/getschedule?id=8")`)
        let datas = await response.json();
        let item = null;
        const filteredData = datas.filter(data =>
            data.productId !== null && data.orderStatus !== "取消");
        return filteredData
    }

    //點選任何一個事情
    async function seeDetail(orderid){
            const value = await getcourses();
            const getCourse = value;
            
            const filterData = getCourse.filter(data => data.orderId == orderid);
            let beginTime = new Date(filterData[0].beginTime);
            let endTime = new Date(filterData[0].endTime);
            $("#orderDetail").empty();
            $("#orderDetail").append(`<h5>${filterData[0].productName}</h5><br><span>${(beginTime.getMonth() + 1).toString().padStart(2, '0')
                } /${beginTime.getDate().toString().padStart(2, '0')}       ${beginTime.getHours().toString().padStart(2, '0')}:${beginTime.getMinutes().toString().padStart(2, '0')} -
                                                                                                    ${endTime.getHours().toString().padStart(2, '0')}:${endTime.getMinutes().toString().padStart(2, '0')}</span> <br>`)
    }


        async function showModal(orderid) {
            const value = await getcourses();
            const getCourse = value;

            const filterData = getCourse.filter(data => data.orderId == orderid);
            let beginTime = new Date(filterData[0].beginTime);
            let endTime = new Date(filterData[0].endTime);
            $("#title").html(filterData[0].productName)
            $("#detailBody").html(`      <div>日期: ${(beginTime.getMonth() + 1).toString().padStart(2, '0')
                } /${beginTime.getDate().toString().padStart(2, '0')}       ${beginTime.getHours().toString().padStart(2, '0')}:${beginTime.getMinutes().toString().padStart(2, '0')} -
                                                                                                            ${endTime.getHours().toString().padStart(2, '0')}:${endTime.getMinutes().toString().padStart(2, '0')}</div>
                        <div>描述: ${filterData[0].feature}</div>
                        <div>參加人:</div>`)
            //$("#")
            var myModal = new bootstrap.Modal(document.getElementById('exampleModal'));
            myModal.show();
        }

</script>
}

@section Styles{
    <style>
        .calendar {
            width: 100%;
            height:100% ;
            background-color: #F0F0F0;
     /*        border-radius: 30px; */
            box-shadow: 0 0.5rem 3rem rgba(0,0,0,0.4);
        }

        .month {
            width: 100%;
            padding-bottom: 5%;
            background-color: #FFFFFF;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
            text-align: center;
            text-shadow: 0 0.3rem o.5rem rgba(0,0,0,0.5);
        }

            .month i {
                font-size: 1rem;
                cursor: pointer;
            }

            .month h1 {
                font-size: 2rem;
                font-weight: 400;
                text-transform: uppercase;
                letter-spacing: 0.2rem;
                margin-bottom: 1rem;
                margin-top:1rem;
            }

            .month p {
                font-size: 1rem;
            }

        .weekdays {
            width: 100%;
            height: 5rem;
            padding: 0 0.4rem;
            display: flex;
            align-items: center;
            background-color: #FFFFFF;
        }

            .weekdays div {
                font-size: 1.5rem;
                font-weight: 400;
                letter-spacing: 0.1rem;
                width: calc(100%/7);
                display: flex;
                justify-content: center;
                align-items: center;
                text-shadow: 0 0.3rem 0.5rem rgba(0,0,0,0.5);
            }

        .days {
            width: 100%;
            display: flex;
            flex-wrap: wrap;
            padding: 0.2rem;
            
        }
      

            .days div {
                font-size: 1.4rem;
/*                 margin: 0.3rem; */
    /*             padding-right:3px; */
                width: calc(100%/7);
                height:120px;
              /*   padding-bottom: 8%; */
         /*        display: flex; */
        /*         justify-content: start;
                align-items: start; */
                text-shadow: 0 0.3rem 0.5rem rgba(0,0,0,0.5);
                transition: backgrouod-color 0.2s;
                border:solid;
                border-width:thin;
                border-color: #FCFCFC;
                position: relative; /* 添加相对定位 */
              
            }
            .days div i{
                    justify-content: end;
                    align-items: start;
            /*         position: absolute; 
                    top: 0;
                    right: 1; */
            }
             .days div span{
                
                    display: inline-block;
                    font-size: 0.8rem;
                   /* background-color:white;*/
                /*    border-radius:30px;*/
            }  
                .days div span:hover {
                    background-color: #FFF8D7;
                    border: 0.2rem solid #777;
                    cursor: pointer;
                }


                .days div:hover:not(.today) {
                    background-color: #262626;
                    border: 0.2rem solid #777;
                    cursor: pointer;
                }

        .prev-date,
        .next-date {
            opacity: 0.5;
        }

        .today {
            background-color: #94aaa2;
        }
        .allCourse{
            width: 30%;
            background-color: #94aaa2;
        }

        .explore {
            
            margin-top:30%;
            padding:10px;
            border-radius:40px;
            background-color:White;
            border-color:black;
        }
        .currentCourse{
            width:80%;
         /*    padding-bottom:80%; */
         height:300px;
            border: solid;
   /*          border-color: black; */
          /*   border-radius: 30px; */
            background-color:white;
            padding-left:15px;
            padding-top:15px;
            overflow: auto
        }

            .currentCourse div:hover {
                background-color: #FFF8D7;
                border: 0.2rem solid #777;
                cursor: pointer;
            }
        .currentCourse span{
            font-size:1rem;
            font-style:oblique;
        }

        .dot {
            height: 10px;
            width: 10px;
            background-color: orange;
            border-radius: 50%;
            display: inline-block;
        }

        .schedule {
            width: 30%;
            padding-bottom: 8%;
            background-color: #e1dfe1;
            box-shadow: 0 0.3rem 3rem rgba(0,0,0,0.3);
            /* display: none; */
        }

        .title {
            width: 100%;
            height: 12rem;
            background-color: #9ba7a3;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
            text-align: center;
            text-shadow: 0 0.3rem o.5rem rgba(0,0,0,0.5);
        }

            .title h1 {
                font-size: 3rem;
                font-weight: 400;
                text-transform: uppercase;
                letter-spacing: 0.2rem;
                margin-bottom: 1rem;
            }

        .list {
            margin-left: 2rem;
            margin-top: 1.8rem;
            padding-left: 3rem;
        }

            .list li {
                font-size: 1rem;
                font-weight: 400;
                letter-spacing: 0.1rem;
                height: calc(38rem/9);
                text-shadow: 0 0.3rem 0.5rem rgba(0,0,0,0.5);
            }

        .time {
            height: 5rem;
            padding: 0 0.4rem;
            align-items: center;
        }

            .time div {
                font-size: 1.5rem;
                font-weight: 400;
                letter-spacing: 0.1rem;
                height: calc(38rem/9);
                text-shadow: 0 0.3rem 0.5rem rgba(0,0,0,0.5);
            }
    </style>
}
